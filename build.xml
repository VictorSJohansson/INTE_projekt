<project name="TestFramework" default="compile" basedir=".">
	<description>
		Projekt INTE HT2015
	</description>

	<property name="src" location="org" />
	<property name="compile" location="bin" />
	<property name="dist" location="dist" />

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the compile directory -->
		<mkdir dir="${compile}" />
	</target>

	<target name="compile" depends="init" description="compile the source">
		<!-- Compile the java code from ${src} into ${build} -->


		<!-- Used William Brendel's suggested solution to create the solution below: 
		http://stackoverflow.com/questions/722774/getting-ant-javac-to-recognise-a-classpath -->
		<path id="junit-classpath">
			<fileset dir="lib">
				<include name="**/*.jar" />
			</fileset>

			<pathelement path="${compile}" />
		</path>


		<javac includeantruntime="false" destdir="${compile}">
			<src path="${src}" />
			<classpath refid="junit-classpath" />
		</javac>



	</target>



	<!-- IS NOT RUNNING SINCE DEFAULT = compile -->

	<target name="dist" depends="compile" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib" />

		<!-- Put everything in ${build} into the TestFramework-${tstamp}.jar file -->
		<jar jarfile="${dist}/lib/TestFramework-${DSTAMP}-${TSTAMP}.jar" basedir="${build}" />
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${compile}" />
		<delete dir="${dist}" />
	</target>
</project>
